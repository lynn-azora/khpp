[{"D:\\myweb9\\gxdc\\src\\index.js":"1","D:\\myweb9\\gxdc\\src\\reportWebVitals.js":"2","D:\\myweb9\\gxdc\\src\\App.js":"3","D:\\myweb9\\gxdc\\src\\components\\Header\\index.jsx":"4","D:\\myweb9\\gxdc\\src\\components\\NavLeft\\index.jsx":"5","D:\\myweb9\\gxdc\\src\\utils\\utils.js":"6","D:\\myweb9\\gxdc\\src\\components\\Footer\\index.jsx":"7","D:\\myweb9\\gxdc\\src\\admin.jsx":"8","D:\\myweb9\\gxdc\\src\\router.jsx":"9","D:\\myweb9\\gxdc\\src\\config\\menuConfig.js":"10","D:\\myweb9\\gxdc\\src\\pages\\ui\\button.jsx":"11","D:\\myweb9\\gxdc\\src\\pages\\ui\\modals.jsx":"12","D:\\myweb9\\gxdc\\src\\pages\\ui\\loading.jsx":"13","D:\\myweb9\\gxdc\\src\\pages\\ui\\notice.jsx":"14","D:\\myweb9\\gxdc\\src\\pages\\ui\\message.jsx":"15","D:\\myweb9\\gxdc\\src\\pages\\ui\\tabs.jsx":"16","D:\\myweb9\\gxdc\\src\\pages\\ui\\gallery.jsx":"17","D:\\myweb9\\gxdc\\src\\pages\\ui\\carousel.jsx":"18","D:\\myweb9\\gxdc\\src\\pages\\nomatch\\index.jsx":"19","D:\\myweb9\\gxdc\\src\\pages\\form\\login.jsx":"20","D:\\myweb9\\gxdc\\src\\pages\\form\\register.jsx":"21","D:\\myweb9\\gxdc\\src\\pages\\home\\index.jsx":"22","D:\\myweb9\\gxdc\\src\\pages\\table\\basicTable.jsx":"23","D:\\myweb9\\gxdc\\src\\axios\\index.js":"24","D:\\myweb9\\gxdc\\src\\pages\\table\\highTable.jsx":"25","D:\\myweb9\\gxdc\\src\\pages\\city\\index.jsx":"26","D:\\myweb9\\gxdc\\src\\pages\\order\\index.jsx":"27","D:\\myweb9\\gxdc\\src\\components\\BaseForm\\index.jsx":"28","D:\\myweb9\\gxdc\\src\\components\\ETable\\index.jsx":"29","D:\\myweb9\\gxdc\\src\\pages\\order\\detail.jsx":"30","D:\\myweb9\\gxdc\\src\\common.jsx":"31","D:\\myweb9\\gxdc\\src\\pages\\user\\index.jsx":"32","D:\\myweb9\\gxdc\\src\\pages\\bikeMap\\index.jsx":"33","D:\\myweb9\\gxdc\\src\\pages\\echarts\\pie\\index.jsx":"34","D:\\myweb9\\gxdc\\src\\pages\\echarts\\bar\\index.jsx":"35","D:\\myweb9\\gxdc\\src\\pages\\echarts\\line\\index.jsx":"36","D:\\myweb9\\gxdc\\src\\pages\\permission\\index.jsx":"37","D:\\myweb9\\gxdc\\src\\pages\\echarts\\echartTheme.js":"38","D:\\myweb9\\gxdc\\src\\pages\\rich\\index.jsx":"39","D:\\myweb9\\gxdc\\src\\pages\\echarts\\themeLight.js":"40"},{"size":462,"mtime":1613481647712,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1608023246560,"results":"43","hashOfConfig":"42"},{"size":207,"mtime":1613481191816,"results":"44","hashOfConfig":"42"},{"size":2238,"mtime":1614567202075,"results":"45","hashOfConfig":"42"},{"size":1986,"mtime":1614568181197,"results":"46","hashOfConfig":"42"},{"size":1439,"mtime":1614171966688,"results":"47","hashOfConfig":"42"},{"size":384,"mtime":1613479856375,"results":"48","hashOfConfig":"42"},{"size":767,"mtime":1613482173061,"results":"49","hashOfConfig":"42"},{"size":3319,"mtime":1614321471741,"results":"50","hashOfConfig":"42"},{"size":2723,"mtime":1614437559794,"results":"51","hashOfConfig":"42"},{"size":2977,"mtime":1613640180731,"results":"52","hashOfConfig":"42"},{"size":2784,"mtime":1613641055027,"results":"53","hashOfConfig":"42"},{"size":1915,"mtime":1613655068530,"results":"54","hashOfConfig":"42"},{"size":1671,"mtime":1613657416700,"results":"55","hashOfConfig":"42"},{"size":953,"mtime":1613663257346,"results":"56","hashOfConfig":"42"},{"size":3949,"mtime":1613699942828,"results":"57","hashOfConfig":"42"},{"size":2478,"mtime":1613703719696,"results":"58","hashOfConfig":"42"},{"size":1256,"mtime":1613704900291,"results":"59","hashOfConfig":"42"},{"size":261,"mtime":1613705048856,"results":"60","hashOfConfig":"42"},{"size":3782,"mtime":1613813024599,"results":"61","hashOfConfig":"42"},{"size":9508,"mtime":1613832061643,"results":"62","hashOfConfig":"42"},{"size":283,"mtime":1613479850821,"results":"63","hashOfConfig":"42"},{"size":8244,"mtime":1613921788152,"results":"64","hashOfConfig":"42"},{"size":2457,"mtime":1614175016357,"results":"65","hashOfConfig":"42"},{"size":12307,"mtime":1614150534888,"results":"66","hashOfConfig":"42"},{"size":6881,"mtime":1614151209649,"results":"67","hashOfConfig":"42"},{"size":5270,"mtime":1614176261984,"results":"68","hashOfConfig":"42"},{"size":4330,"mtime":1614157436285,"results":"69","hashOfConfig":"42"},{"size":1943,"mtime":1614174588478,"results":"70","hashOfConfig":"42"},{"size":5430,"mtime":1614318758576,"results":"71","hashOfConfig":"42"},{"size":429,"mtime":1614176428303,"results":"72","hashOfConfig":"42"},{"size":8611,"mtime":1614409874708,"results":"73","hashOfConfig":"42"},{"size":4260,"mtime":1614420510223,"results":"74","hashOfConfig":"42"},{"size":4965,"mtime":1614438952515,"results":"75","hashOfConfig":"42"},{"size":2367,"mtime":1614437799286,"results":"76","hashOfConfig":"42"},{"size":3152,"mtime":1614438472509,"results":"77","hashOfConfig":"42"},{"size":10589,"mtime":1614515810312,"results":"78","hashOfConfig":"42"},{"size":4742,"mtime":1611662172062,"results":"79","hashOfConfig":"42"},{"size":1520,"mtime":1614518528993,"results":"80","hashOfConfig":"42"},{"size":3896,"mtime":1611662170417,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"15837m1",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"111"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"87"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"87"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"87"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\myweb9\\gxdc\\src\\index.js",[],["178","179"],"D:\\myweb9\\gxdc\\src\\reportWebVitals.js",[],["180","181"],"D:\\myweb9\\gxdc\\src\\App.js",[],"D:\\myweb9\\gxdc\\src\\components\\Header\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\components\\NavLeft\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\utils\\utils.js",["182","183"],"import React from 'react'\r\nimport {Select} from 'antd'\r\nconst Option = Select.Option\r\n\r\nexport default {\r\n    formateDate(time){\r\n        if(!time) return '';\r\n        let date = new Date(time);\r\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+\" \"+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds()\r\n    },\r\n    pagination(data,callback){\r\n        return {\r\n            onChange:(current)=>{\r\n                callback(current)\r\n            },\r\n            current:data.result.page,\r\n            pageSize:data.result.page_size,\r\n            total:data.result.total_count,\r\n            showTotal:()=>{\r\n                return `共${data.result.total_count}条`\r\n            },\r\n            showQuickJumper:true\r\n        }\r\n    },\r\n    getOptionList(data){\r\n        if(!data){\r\n            return []\r\n        }\r\n        let options = [];\r\n        data.map(item=>{\r\n            options.push(<Option value={item.id} key={item.id}>\r\n                {item.name}\r\n            </Option>)\r\n        })\r\n        return options;\r\n    },\r\n    updateSelectedItem(selectedRowKeys,selectedItem,selectedIds){\r\n        if(selectedIds){\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem,\r\n                selectedIds\r\n            })\r\n        }else{\r\n            this.setState({\r\n                selectedRowKeys,\r\n                selectedItem\r\n            })\r\n        }\r\n    }\r\n}",["184","185"],"D:\\myweb9\\gxdc\\src\\components\\Footer\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\admin.jsx",[],"D:\\myweb9\\gxdc\\src\\router.jsx",[],["186","187"],"D:\\myweb9\\gxdc\\src\\config\\menuConfig.js",[],"D:\\myweb9\\gxdc\\src\\pages\\ui\\button.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\ui\\modals.jsx",[],["188","189"],"D:\\myweb9\\gxdc\\src\\pages\\ui\\loading.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\ui\\notice.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\ui\\message.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\ui\\tabs.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\ui\\gallery.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\ui\\carousel.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\nomatch\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\form\\login.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\form\\register.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\home\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\table\\basicTable.jsx",["190","191","192"],"import React, { Component } from 'react'\r\nimport {Card,Table,Modal,Button,message} from 'antd'\r\nimport axios from './../../axios'\r\nimport Utils from './../../utils/utils'\r\n\r\nexport default class BasicTable extends Component {\r\n    state = {\r\n        dataSouuce2:[]\r\n    }\r\n    params = {\r\n        page:1\r\n    }\r\n    componentDidMount(){\r\n        const dataSource = [\r\n            {\r\n                id:'0',\r\n                userName:'Tom',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2010-01-01',\r\n                address:'北京市海淀区奥林匹克公园',\r\n                time:'09:00'\r\n            },\r\n            {\r\n                id:'1',\r\n                userName:'Jarry',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2010-01-01',\r\n                address:'北京市海淀区奥林匹克公园',\r\n                time:'09:00'\r\n            },{\r\n                id:'2',\r\n                userName:'Susan',\r\n                sex:'1',\r\n                state:'1',\r\n                interest:'1',\r\n                birthday:'2010-01-01',\r\n                address:'北京市海淀区奥林匹克公园',\r\n                time:'09:00'\r\n            }\r\n        ]\r\n        dataSource.map((item,index)=>{\r\n            item.key = index;\r\n        })\r\n        this.setState({dataSource})\r\n        this.request();\r\n    }\r\n    request = () => {\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/table/list1',\r\n            params:{\r\n                page:this.params.page\r\n            }\r\n        }).then(res=>{\r\n            if(res.code === 0){\r\n                res.result.list.map((item,index)=>{\r\n                    item.key = index;\r\n                })\r\n                this.setState({\r\n                    dataSource2:res.result.list,\r\n                    selectedRowKeys:[],\r\n                    selectedRows:null,\r\n                    pagination:Utils.pagination(res,(current)=>{\r\n                        _this.params.page = current; //这里mock数据中page不为1页面不显示数据\r\n                        _this.request();\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    }\r\n    onRowClick = (record,index) => {\r\n        let selectKey = [index];\r\n        Modal.info({\r\n            title:'信息',\r\n            content:`用户名：${record.userName}，用户爱好：${record.interest}`\r\n        })\r\n        this.setState({\r\n            selectedRowKeys:selectKey, //值为数组，选中此项\r\n            selectedItem:record //没有用到吗？\r\n        })\r\n    }\r\n    handleDelete = () => {\r\n        let rows = this.state.selectedRows;\r\n        let ids = [];\r\n        rows.map(item=>{\r\n            ids.push(item.id)\r\n        })\r\n        Modal.confirm({\r\n            title:'删除提示',\r\n            content:`您确定要删除这些数据吗${ids.join(',')}`,\r\n            onOk:()=>{\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'id',\r\n                key:'id',\r\n                dataIndex:'id'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                key:'userName',\r\n                dataIndex:'userName'\r\n            },\r\n            {\r\n                title:'性别',\r\n                key:'sex',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex===1?'男':'女'\r\n                }\r\n            },\r\n            {\r\n                title:'状态',\r\n                key:'state',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'咸鱼一条',\r\n                        '2':'风华浪子',\r\n                        '3':'北大才子',\r\n                        '4':'百度FE',\r\n                        '5':'创业者',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                key:'interest',\r\n                dataIndex:'interest',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'唱歌',\r\n                        '2':'跳舞',\r\n                        '3':'跑步',\r\n                        '4':'爬山',\r\n                        '5':'桌球',\r\n                        '6':'轮滑',\r\n                        '7':'吃饭',\r\n                        '8':'睡觉',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday',\r\n                dataIndex:'birthday'\r\n            }\r\n            ,\r\n            {\r\n                title:'地址',\r\n                key:'address',\r\n                dataIndex:'address'\r\n            },\r\n            {\r\n                title:'早起时间',\r\n                key:'time',\r\n                dataIndex:'time'\r\n            }\r\n        ]\r\n        const {selectedRowKeys} =this.state;\r\n        const rowSelection = {\r\n            type:'radio',  //多选/单选，checkbox or radio\r\n            selectedRowKeys //指定选中项的 key 数组，需要和 onChange 进行配合\r\n        }\r\n        const rowCheckSelection = {\r\n            type:'checkbox',\r\n            selectedRowKeys,\r\n            onChange:(selectedRowKeys,selectedRows)=>{\r\n                this.setState({\r\n                    selectedRowKeys,//选中行下标\r\n                    selectedRows //选中行?\r\n                })\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card title=\"基础表格\">\r\n                    <Table\r\n                        bordered //显示边框\r\n                        columns={columns} //表头\r\n                        dataSource={this.state.dataSource} //内容\r\n                        pagination={false} //不分页\r\n                    />\r\n                </Card>\r\n                <Card title=\"动态Mock数据渲染表格\" style={{margin:'10px 0'}}>\r\n                    <Table\r\n                        bordered \r\n                        columns={columns} \r\n                        dataSource={this.state.dataSource2} \r\n                        pagination={false} \r\n                    />\r\n                </Card>\r\n                <Card title=\"mock - 单选\" style={{margin:'10px 0'}}>\r\n                    <Table\r\n                        bordered \r\n                        columns={columns} \r\n                        dataSource={this.state.dataSource2} \r\n                        pagination={false} \r\n                        rowSelection={rowSelection} //表格行是否可选择\r\n                        onRow={(record,index)=>{\r\n                            return {\r\n                                onClick:()=>{\r\n                                    this.onRowClick(record,index);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                </Card>\r\n                <Card title=\"mock - 多选\" style={{margin:'10px 0'}}>\r\n                    <div style={{marginBottom:10}}>\r\n                        <Button type=\"primary\" onClick={this.handleDelete}>删除</Button>\r\n                    </div>\r\n                    <Table\r\n                        bordered \r\n                        columns={columns} \r\n                        dataSource={this.state.dataSource2} \r\n                        pagination={false} \r\n                        rowSelection={rowCheckSelection} //表格行是否可选择\r\n                    />\r\n                </Card>\r\n                <Card title=\"mock - 表格分页\" style={{margin:'10px 0'}}>\r\n                    <Table\r\n                        bordered \r\n                        columns={columns} \r\n                        dataSource={this.state.dataSource2} \r\n                        pagination={this.state.pagination} \r\n                        // rowSelection={rowCheckSelection} //表格行是否可选择\r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\myweb9\\gxdc\\src\\axios\\index.js",[],"D:\\myweb9\\gxdc\\src\\pages\\table\\highTable.jsx",["193"],"import React, { Component } from 'react'\r\nimport {Card,Table,Modal,Button,message} from 'antd'\r\nimport axios from './../../axios'\r\n\r\nexport default class HighTable extends Component {\r\n    state = {\r\n        dataSouuce2:[]\r\n    }\r\n    params = {\r\n        page:1\r\n    }\r\n    componentDidMount(){\r\n        this.request();\r\n    }\r\n    request= () => {\r\n        let _this = this;\r\n        axios.ajax({\r\n            url:'/table/high/list',\r\n            data:{\r\n                params:{\r\n                    page:this.params.page\r\n                }\r\n            }\r\n        }).then((res)=>{\r\n            if(res.code === 0){\r\n                res.result.list.map((item,index)=>{\r\n                    item.key = index;\r\n                })\r\n                _this.setState({\r\n                    dataSource2:res.result.list\r\n                })\r\n            }\r\n        })\r\n    }\r\n    handleChange = (pagination,filters,sorter) => {\r\n        this.setState({\r\n            sortOrder:sorter.order\r\n        })\r\n    }\r\n    handleDelete = (item) => {\r\n        // let id = item.id;\r\n        Modal.confirm({\r\n            title:'确认',\r\n            content:\"您确定要删除此条数据吗？\",\r\n            onOk:()=>{\r\n                message.success('删除成功');\r\n                this.request();\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title:'id',\r\n                key:'id',\r\n                dataIndex:'id'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                key:'userName',\r\n                dataIndex:'userName'\r\n            },\r\n            {\r\n                title:'性别',\r\n                key:'sex',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex===1?'男':'女'\r\n                }\r\n            },\r\n            {\r\n                title:'状态',\r\n                key:'state',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'咸鱼一条',\r\n                        '2':'风华浪子',\r\n                        '3':'北大才子',\r\n                        '4':'百度FE',\r\n                        '5':'创业者',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                key:'interest',\r\n                dataIndex:'interest',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'唱歌',\r\n                        '2':'跳舞',\r\n                        '3':'跑步',\r\n                        '4':'爬山',\r\n                        '5':'桌球',\r\n                        '6':'轮滑',\r\n                        '7':'吃饭',\r\n                        '8':'睡觉',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday',\r\n                dataIndex:'birthday'\r\n            }\r\n            ,\r\n            {\r\n                title:'地址',\r\n                key:'address',\r\n                dataIndex:'address'\r\n            },\r\n            {\r\n                title:'早起时间',\r\n                key:'time',\r\n                dataIndex:'time'\r\n            }\r\n        ]\r\n        const columns2 = [\r\n            {\r\n                title:'id',\r\n                key:'id',\r\n                dataIndex:'id',\r\n                width:80,\r\n                fixed:'left'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                key:'userName',\r\n                dataIndex:'userName',\r\n                width:80,\r\n                fixed:'left'\r\n            },\r\n            {\r\n                title:'性别',\r\n                key:'sex',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex===1?'男':'女'\r\n                }\r\n            },\r\n            {\r\n                title:'状态',\r\n                key:'state',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'咸鱼一条',\r\n                        '2':'风华浪子',\r\n                        '3':'北大才子',\r\n                        '4':'百度FE',\r\n                        '5':'创业者',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                key:'interest',\r\n                dataIndex:'interest',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'唱歌',\r\n                        '2':'跳舞',\r\n                        '3':'跑步',\r\n                        '4':'爬山',\r\n                        '5':'桌球',\r\n                        '6':'轮滑',\r\n                        '7':'吃饭',\r\n                        '8':'睡觉',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday2',\r\n                width:120,\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday3',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday13',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday4',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'地址',\r\n                key:'address',\r\n                dataIndex:'address'\r\n            },\r\n            {\r\n                title:'早起时间',\r\n                key:'time',\r\n                dataIndex:'time'\r\n            }\r\n        ]\r\n        const columns3 = [\r\n            {\r\n                title:'id',\r\n                key:'id',\r\n                dataIndex:'id'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                key:'userName',\r\n                dataIndex:'userName'\r\n            },\r\n            {\r\n                title:'性别',\r\n                key:'sex',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex===1?'男':'女'\r\n                }\r\n            },\r\n            {\r\n                title:'年龄',\r\n                key:'age',\r\n                dataIndex:'age',\r\n                sorter:(a,b)=> {\r\n                    return a.age - b.age;\r\n                },\r\n                sortOrder:this.state.sortOrder\r\n            },\r\n            {\r\n                title:'状态',\r\n                key:'state',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'咸鱼一条',\r\n                        '2':'风华浪子',\r\n                        '3':'北大才子',\r\n                        '4':'百度FE',\r\n                        '5':'创业者',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                key:'interest',\r\n                dataIndex:'interest',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'唱歌',\r\n                        '2':'跳舞',\r\n                        '3':'跑步',\r\n                        '4':'爬山',\r\n                        '5':'桌球',\r\n                        '6':'轮滑',\r\n                        '7':'吃饭',\r\n                        '8':'睡觉',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday',\r\n                dataIndex:'birthday'\r\n            }\r\n            ,\r\n            {\r\n                title:'地址',\r\n                key:'address',\r\n                dataIndex:'address'\r\n            },\r\n            {\r\n                title:'早起时间',\r\n                key:'time',\r\n                dataIndex:'time'\r\n            }\r\n        ]\r\n        const columns4 = [\r\n            {\r\n                title:'id',\r\n                key:'id',\r\n                dataIndex:'id'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                key:'userName',\r\n                dataIndex:'userName'\r\n            },\r\n            {\r\n                title:'性别',\r\n                key:'sex',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                    return sex===1?'男':'女'\r\n                }\r\n            },\r\n            {\r\n                title:'年龄',\r\n                key:'age',\r\n                dataIndex:'age'\r\n            },\r\n            {\r\n                title:'状态',\r\n                key:'state',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'咸鱼一条',\r\n                        '2':'风华浪子',\r\n                        '3':'北大才子',\r\n                        '4':'百度FE',\r\n                        '5':'创业者',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                key:'interest',\r\n                dataIndex:'interest',\r\n                render(state){\r\n                    let config ={\r\n                        '1':'唱歌',\r\n                        '2':'跳舞',\r\n                        '3':'跑步',\r\n                        '4':'爬山',\r\n                        '5':'桌球',\r\n                        '6':'轮滑',\r\n                        '7':'吃饭',\r\n                        '8':'睡觉',\r\n                    }\r\n                    return config[state];\r\n                }\r\n            },\r\n            {\r\n                title:'生日',\r\n                key:'birthday',\r\n                dataIndex:'birthday'\r\n            }\r\n            ,\r\n            {\r\n                title:'地址',\r\n                key:'address',\r\n                dataIndex:'address'\r\n            },\r\n            {\r\n                title:'操作',\r\n                key:'time',\r\n                dataIndex:'time',\r\n                render:(text,item)=>{\r\n                    return <Button type=\"primary\" size=\"small\" onClick={()=>{this.handleDelete(item)}}>删除</Button>\r\n                }\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card title=\"头部固定\" >\r\n                    {/* 设置滚动条和高度就可以了 */}\r\n                    <Table\r\n                        bordered \r\n                        columns={columns} \r\n                        dataSource={this.state.dataSource2} \r\n                        pagination={false} \r\n                        scroll ={{y:240}}\r\n                    />\r\n                </Card>\r\n                <Card title=\"左侧固定\" style={{margin:'10px 0'}}>\r\n                    <Table\r\n                        bordered \r\n                        columns={columns2} \r\n                        dataSource={this.state.dataSource2} \r\n                        pagination={false} \r\n                        scroll={{x:2000}}\r\n                    />\r\n                </Card>\r\n                <Card title=\"表格排序\" style={{margin:'10px 0'}}>\r\n                    <Table\r\n                        bordered \r\n                        columns={columns3} \r\n                        dataSource={this.state.dataSource2} \r\n                        pagination={false} \r\n                        onChange={this.handleChange}\r\n                    />\r\n                </Card>\r\n                <Card title=\"操作按钮\" style={{margin:'10px 0'}}>\r\n                    <Table\r\n                        bordered \r\n                        columns={columns4} \r\n                        dataSource={this.state.dataSource2} \r\n                        pagination={false} \r\n                    />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\myweb9\\gxdc\\src\\pages\\city\\index.jsx",["194","195","196"],"import React, { Component } from 'react'\nimport {Card,Button,Table,Form,Select,Modal, message} from 'antd'\nimport axios from './../../axios/index'\nimport Utils from './../../utils/utils'\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nexport default class City extends Component {\n  state = {\n    list:[],\n    isShowOpenCity:false\n  }\n  params={\n    page:1\n  }\n  componentDidMount(){\n    this.requestList();\n  }\n  //默认请求接口数据\n  requestList = () => {\n    let _this = this;\n    axios.ajax({\n      //https://www.fastmock.site/mock/c8a5a603f1ea68656997314a831c2681/gxdc\n      url:'/open_city',\n      data:{\n        params:{\n          page:this.params.page\n        }\n      }\n    }).then((res)=>{\n      this.setState({\n        list:res.result.item_list.map((item,index)=>{\n          item.key = index;\n          return item;\n        }),\n        pagination:Utils.pagination(res,(current)=>{\n          _this.params.page = current;\n          _this.requestList();\n        })\n      })\n    })\n  }\n  //开通城市\n  handleOpenCity = () => {\n    this.setState({\n      isShowOpenCity:true\n    })\n  }\n  //城市开通提交\n  handleSubmit = () => {\n    let cityInfo = this.cityForm.props.form.getFieldsValue();\n    axios.ajax({\n      url:'/city/open',\n      data:{\n        params:cityInfo\n      }\n    }).then((res)=>{\n      if(res.code == '0'){\n        message.success(\"开通成功\");\n        this.setState({\n          isShowOpenCity:false\n        })\n        this.requestList();\n      }\n    })\n  }\n  render() {\n    const columns = [\n      {\n        title:'城市ID',\n        dataIndex:'id'\n      },{\n        title:'城市名称',\n        dataIndex:'name'\n      },{\n        title:'用车模式',\n        dataIndex:'mode',\n        render(mode){\n          return mode==1?'停车点':'禁停区'\n        }\n      },{\n        title:'运营模式',\n        dataIndex:'op_mode',\n        render(op_mode){\n          return op_mode == 1?'自营':'加盟'\n        }\n      },{\n        title:'授权加盟商',\n        dataIndex:'franchisee_name'\n      },{\n          title:'城市管理员',\n          dataIndex:'city_admins',\n          render(arr){\n              return arr.map((item)=>{\n                  return item.user_name;\n              }).join(',');\n          }\n      },{\n          title:'城市开通时间',\n          dataIndex:'open_time'\n      },{\n          title:'操作时间',\n          dataIndex:'update_time',\n          render:Utils.formateDate\n      },{\n          title:'操作人',\n          dataIndex:'sys_user_name'\n      }\n    ]\n    return (\n      <div>\n        <Card>\n          <FilterForm />\n        </Card>\n        <Card style={{marginTop:10}}>\n          <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\n        </Card>\n        <div className=\"content-wrap\">\n          <Table\n            bordered\n            columns={columns}\n            dataSource={this.state.list}\n            pagination={this.state.pagination}\n          />\n        </div>\n        <Modal \n          title=\"开通城市\"\n          visible={this.state.isShowOpenCity}\n          onCancel={()=>{\n            this.setState({\n              isShowOpenCity:false\n            })\n          }}\n          onOk={this.handleSubmit}\n        >\n          <OpenCityForm wrappedComponentRef={(inst)=>{this.cityForm = inst;}} />\n          {/* 相当于ref */}\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass FilterForm extends Component{\n  render(){\n    const  {getFieldDecorator} = this.props.form;\n    return (\n      <Form layout=\"inline\">\n        <FormItem label=\"城市\">\n          {\n            getFieldDecorator('city_id')(\n              <Select style={{width:100}} placeholder=\"全部\">\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">北京市</Option>\n                <Option value=\"2\">天津市</Option>\n                <Option value=\"3\">深圳市</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"用车模式\">\n          {\n            getFieldDecorator('mode')(\n              <Select style={{width:130}} placeholder=\"全部\">\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">指定停车点模式</Option>\n                <Option value=\"2\">禁停区模式</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"营运模式\">\n          {\n            getFieldDecorator('op_mode')(\n              <Select style={{width:80}} placeholder=\"全部\">\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">自营</Option>\n                <Option value=\"2\">加盟</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"加盟商授权状态\">\n          {\n            getFieldDecorator('auth_status')(\n              <Select style={{width:100}} placeholder=\"全部\">\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">已授权</Option>\n                <Option value=\"2\">未授权</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" style={{margin:'0 20px'}}>查询</Button>\n          <Button>重置</Button>\n        </FormItem>\n      </Form>\n    )\n  }\n}\nFilterForm = Form.create({})(FilterForm)\n\nclass OpenCityForm extends Component{\n  render(){\n    const formItemlayout = {\n      labelCol:{\n        span:5\n      },\n      wrapperCol:{\n        span:19\n      }\n    }\n    const {getFieldDecorator} = this.props.form;\n    return (\n      <Form layout=\"horizontal\">\n        <FormItem label=\"选择城市\" {...formItemlayout}>\n          {\n            getFieldDecorator('city_id',{\n              initialValue:'1'\n            })(\n              <Select style={{width:100}}>\n                <Option value=\"\">全部</Option>\n                <Option value=\"1\">北京市</Option>\n                <Option value=\"2\">天津市</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"营运模式\" {...formItemlayout}>\n          {\n            getFieldDecorator('op_mode',{\n              initialValue:'1'\n            })(\n              <Select style={{width:100}}>\n                <Option value=\"1\">自营</Option>\n                <Option value=\"2\">加盟</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"用车模式\" {...formItemlayout}>\n          {\n            getFieldDecorator('use_mode',{\n              initialValue:'1'\n            })(\n              <Select style={{width:100}}>\n                <Option value=\"1\">指定停车点</Option>\n                <Option value=\"2\">禁停区</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n      </Form>\n    )\n  }\n}\nOpenCityForm = Form.create({})(OpenCityForm)","D:\\myweb9\\gxdc\\src\\pages\\order\\index.jsx",["197","198"],"import React, { Component } from 'react'\nimport {Card,Button,Form, Modal,message} from 'antd'\nimport axios from '../../axios'\nimport Utils from '../../utils/utils'\nimport BaseForm from '../../components/BaseForm'\nimport ETable from '../../components/ETable'\n\nconst FormItem = Form.Item;\n\nexport default class Order extends Component {\n  state = {\n    orderInfo:{},\n    handleFinishOrder:false\n  }\n  params = {\n    page:1\n  }\n  formList = [\n    {\n      type:'SELECT',\n      label:'城市',\n      field:'city',\n      placeholder:'全部',\n      initialValue:'1',\n      width:80,\n      list:[{id:'0',name:'全部'},{id:'1',name:'北京'},{id:'2',name:'天津'},{id:'3',name:'上海'}]\n    },{\n      type:'时间查询'\n    },{\n      type: 'SELECT',\n      label: '订单状态',\n      field: 'order_status',\n      placeholder: '全部',\n      initialValue: '1',\n      width: 80,\n      list: [{ id: '0', name: '全部' }, { id: '1', name: '进行中' }, { id: '2', name: '结束行程' }]\n    }\n  ]\n  handleFilter = (params) => {\n    this.params = params;\n    this.requestList();\n  }\n  componentDidMount(){\n    this.requestList()\n  }\n  requestList = () => {\n    axios.requestList(this,'/order/list',this.params,true)\n  }\n  //订单结束确认\n  handleConfirm = () => {\n    let item = this.state.selectedItem;\n    if(!item){\n      Modal.info ({\n        title:'信息',\n        content:'请选择一条订单进行结束'\n      })\n      return;\n    }\n    axios.ajax({\n      url:'/order/ebike_info',\n      data:{\n        params:{\n          orderId:item.id\n        }\n      }\n    }).then(res=>{\n      if(res.code==0){\n        this.setState({\n          orderInfo:res.result,\n          orderConfirmVisible:true\n        })\n      }\n    })\n    this.setState({\n      orderConfirmVisible:true\n    })\n  }\n  //结束订单\n  handleFinishOrder = () => {\n    let item = this.state.selectedItem;\n    axios.ajax({\n      url: '/order/finish_order',\n      data: {\n        params: {\n          orderId: item.id\n        }\n      }\n    }).then((res) => {\n      if (res.code == 0) {\n        message.success(\"订单结束成功\")\n        this.setState({\n          orderConfirmVisible: false\n        })\n        this.requestList();\n      }\n    })\n  }\n  //打开订单详情页面\n  openOrderDetail = () => {\n    let item = this.state.selectedItem;\n    if (!item) {\n      Modal.info({\n        title: '信息',\n        content: '请先选择一条订单'\n      })\n      return;\n    }\n    window.open(`/#/common/order/detail/${item.id}`,'_blank');\n  }\n  render() {\n    const columns = [\n      {\n        title: '订单编号',\n        dataIndex: 'order_sn'\n      },\n      {\n        title: '车辆编号',\n        dataIndex: 'user_name'\n      },\n      {\n        title: '手机号',\n        dataIndex: 'mobile'\n      },\n      {\n        title: '里程',\n        dataIndex: 'distance',\n        render(distance) {\n          return distance / 1000 + 'Km'\n        }\n      },\n      {\n        title: '行驶时长',\n        dataIndex: 'total_time'\n      },\n      {\n        title: '状态',\n        dataIndex: 'status'\n      },\n      {\n        title: '开始时间',\n        dataIndex: 'start_time'\n      },\n      {\n        title: '结束时间',\n        dataIndex: 'end_time'\n      },\n      {\n        title: '订单金额',\n        dataIndex: 'total_fee'\n      },\n      {\n        title: '实付金额',\n        dataIndex: 'user_pay'\n      }\n    ]\n    const formItemLayout = {\n      labelCol: { span: 5 },\n      wrapperCol: { span: 19 }\n    }\n    return (\n      <div>\n        <Card>\n          <BaseForm formList={this.formList} filterSubmit={this.handleFilter} />\n        </Card>\n        <Card style={{marginTop:10}}>\n          <Button type=\"primary\" onClick={this.openOrderDetail} >订单详情</Button>\n          <Button type=\"primary\" onClick={this.handleConfirm} style={{marginLeft:10}}>结束订单</Button>\n        </Card>\n        <div className=\"content-wrap\">\n          <ETable\n            updateSelectedItem={Utils.updateSelectedItem.bind(this)}\n            columns={columns}\n            dataSource={this.state.list}\n            selectedRowKeys={this.state.selectedRowKeys} \n            selectedIds={this.state.selectedIds}\n            selectedItem={this.state.selectedItem}\n            pagination={this.state.pagination}\n            // rowSelection = 'checkbox'\n          />\n        </div>\n        <Modal\n          title=\"结束订单\"\n          visible={this.state.orderConfirmVisible}\n          onCancel ={()=>{\n            this.setState({\n              orderConfirmVisible:false\n            })\n          }}\n          onOk={this.handleFinishOrder}\n          width={600}\n        >\n          <Form>\n            <FormItem label=\"车辆编号\" {...formItemLayout}>\n              {this.state.orderInfo.bike_sn}\n            </FormItem>\n            <FormItem label=\"剩余电量\" {...formItemLayout}>\n              {this.state.orderInfo.battery + \"%\"}\n            </FormItem>\n            <FormItem label=\"行程开始时间\" {...formItemLayout}>\n              {this.state.orderInfo.start_time}\n            </FormItem>\n            <FormItem label=\"当前位置\" {...formItemLayout}>\n              {this.state.orderInfo.location}\n            </FormItem>\n          </Form>\n        </Modal>\n      </div>\n    )\n  }\n}\n","D:\\myweb9\\gxdc\\src\\components\\BaseForm\\index.jsx",["199","200","201","202","203","204"],"import React, { Component } from 'react'\nimport {Input,Select,Form,Button,Checkbox,DatePicker} from 'antd';\nimport Utils from '../../utils/utils'\nconst FormItem = Form.Item;\n\nclass FilterForm extends Component {\n  handleFilterSubmit = () => {\n    let fieldsValue = this.props.form.getFieldsValue();\n    this.props.filterSubmit(fieldsValue)\n  }\n  reset = () => {\n    this.props.form.resetFields();\n  }\n  initFormList = () => {\n    const {getFieldDecorator} = this.props.form;\n    const formList = this.props.formList;\n    const formItemList = [];\n    if (formList && formList.length > 0) {\n      formList.forEach((item, index) => {\n        let label = item.label;\n        let field = item.field;\n        let initialValue = item.initialValue || '';\n        let placeholder = item.placeholder;\n        let width = item.width;\n        if (item.type == '时间查询') {\n          const begin_time = <FormItem label=\"订单时间\" key={field}>\n            {\n              getFieldDecorator('begin_time', {\n                initialValue: initialValue\n              })(\n                <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n              )\n            }\n          </FormItem>\n          formItemList.push(begin_time)\n          const end_time = <FormItem label=\"~\" colon={false} key={field}>\n            {\n              getFieldDecorator('end_time', {\n                initialValue: initialValue\n              })(\n                <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n              )\n            }\n          </FormItem>\n          formItemList.push(end_time)\n        } else if (item.type == '城市') {\n          const CITY = (<FormItem label=\"城市\" key={field}>\n            {\n              getFieldDecorator('city', {\n                initialValue: '0'\n              })(\n                <Select style={{ width: 80 }} placeholder={placeholder}>\n                  {\n                    Utils.getOptionList([{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '上海' }, { id: '3', name: '天津' }, { id: '4', name: '杭州' }])\n                  }\n                </Select>\n              )\n            }\n          </FormItem>)\n          formItemList.push(CITY)\n        } else if (item.type == 'INPUT') {\n          const INPUT = <FormItem label={label} key={field}>\n            {\n              getFieldDecorator([field], {\n                initialValue: initialValue\n              })(\n                <Input type='text' style={{ width: width }} placeholder={placeholder} />\n              )\n            }\n          </FormItem>\n          formItemList.push(INPUT)\n        } else if (item.type == 'SELECT') {\n          const SELECT = <FormItem label={label} key={field}>\n            {\n              getFieldDecorator([field], {\n                initialValue: initialValue\n              })(\n                <Select style={{ width: width }} placeholder={placeholder}>\n                  {Utils.getOptionList(item.list)}\n                </Select>\n              )\n            }\n          </FormItem>\n          formItemList.push(SELECT)\n        } else if (item.type == 'CHECKBOX') {\n          const CHECKBOX = <FormItem label={label} key={field}>\n            {\n              getFieldDecorator([field], {\n                valuePropName: 'checked',\n                initialValue: initialValue\n              })(\n                <Checkbox>\n                  {label}\n                </Checkbox>\n              )\n            }\n          </FormItem>\n          formItemList.push(CHECKBOX)\n        } else if (item.type == 'DATE') {\n          const DATE = <FormItem label={label} key={field}>\n            {\n              getFieldDecorator([field])(\n                <DatePicker showTime={true} placeholder={placeholder} format=\"YYYY-MM-DD HH:mm:ss\" />\n              )\n            }\n          </FormItem>\n          formItemList.push(DATE)\n        }\n      })\n    }\n    return formItemList;\n  }\n  render() {\n    return (\n      <Form layout=\"inline\">\n        {this.initFormList()}\n        <FormItem>\n          <Button type=\"primary\" style={{margin:'0 20px'}} onClick={this.handleFilterSubmit}>查询</Button>\n          <Button onClick={this.reset}>重置</Button>\n        </FormItem>\n      </Form>\n    )\n  }\n}\nexport default Form.create({})(FilterForm)","D:\\myweb9\\gxdc\\src\\components\\ETable\\index.jsx",["205","206","207","208"],"import React, { Component } from 'react'\nimport Utils from './../../utils/utils'\nimport {Table} from 'antd'\n\nexport default class ETable extends Component {\n  onRowClick=(record,index) => {\n    let rowSelection = this.props.rowSelection;\n    if(rowSelection=='checkbox'){\n      let selectedRowKeys = this.props.selectedRowKeys;\n      let selectedIds = this.props.selectedIds;\n      let selectedItem = this.props.selectedItem || [];\n      if (selectedIds) {\n        const i = selectedIds.indexOf(record.id);\n        if (i == -1) {\n          selectedIds.push(record.id)\n          selectedRowKeys.push(index);\n          selectedItem.push(record);\n        } else {\n          selectedIds.splice(i, 1); //变异方法\n          selectedRowKeys.splice(i, 1);\n          selectedItem.splice(i, 1);\n        }\n      } else {\n        selectedIds = [record.id]\n        selectedRowKeys = [index];\n        selectedItem = [record];\n      }\n      this.props.updateSelectedItem(selectedRowKeys, selectedItem || {}, selectedIds)\n    } else {\n      let selectedRowKeys = [index];\n      let selectedItem = record;\n      this.props.updateSelectedItem(selectedRowKeys, selectedItem)\n    }\n  }\n  tableInit = () => {\n    let row_selection = this.props.rowSelection;\n    let selectedRowKeys = this.props.selectedRowKeys;\n    const rowSelection = {\n      type:'radio',\n      selectedRowKeys\n    }\n    if(row_selection === false || row_selection === null){\n      row_selection=false;\n    }else if(row_selection == 'checkbox'){\n      rowSelection.type = 'checkbox'\n    }else{\n      row_selection = 'radio'\n    }\n    return <Table\n      bordered\n      {...this.props}\n      rowSelection={row_selection?rowSelection:null} \n      onRow = {(record,index) => {\n        return {\n          onClick:()=>{\n            this.onRowClick(record,index);\n          }\n        }\n      }}\n    />\n  }\n  render() {\n    return (\n      <div>\n        {this.tableInit()}\n      </div>\n    )\n  }\n}\n",["209","210"],"D:\\myweb9\\gxdc\\src\\pages\\order\\detail.jsx",[],"D:\\myweb9\\gxdc\\src\\common.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\user\\index.jsx",["211","212","213","214","215","216","217","218","219","220","221","222","223"],"import React, { Component } from 'react'\nimport {Card,Button,Modal,Form,Radio,Input,Select,DatePicker} from 'antd';\nimport moment from 'moment'\nimport axios from './../../axios'\nimport Utils from './../../utils/utils'\nimport BaseForm from './../../components/BaseForm'\nimport ETable from './../../components/ETable'\n\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\n\nexport default class User extends Component {\n  state = {}\n  params = {\n    page:1\n  }\n  formList = [\n    {\n      type:'INPUT',\n      label:'用户名',\n      field:'user_name',\n      placeholder:'请输入用户名称',\n      width:130\n    },\n    {\n      type:'INPUT',\n      label:'手机号',\n      field:'user_mobile',\n      placeholder:'请输入手机号',\n      width:140\n    },\n    {\n      type:'DATE',\n      label:'请选择入职日期',\n      field:'user_date',\n      placeholder:'请选择日期',\n    }\n  ]\n  handleFilter = params => {\n    this.params = params;\n    this.requestList();\n  }\n  requestList = () => {\n    axios.requestList(this,'/user/list',this.params)\n  }\n  componentDidMount(){\n    this.requestList();\n  }\n  //功能区操作\n  handleOperate = type =>{\n    let item = this.state.selectedItem;//获取当前选中的对象 结合Etable中的updateSelectedItem和selectedItem\n    if(type === 'create'){\n      this.setState({\n        type,\n        isVisible:true,\n        title:'创建员工'\n      })\n    }else if (type==\"edit\"){\n      if(!item){\n        Modal.info({\n          title:'提示',\n          content:'请选择一个用户'\n        })\n        return;\n      }\n      this.setState({\n        type,\n        isVisible:true,\n        title:'编辑员工',\n        userInfo:item\n      })\n    }else if (type=='detail'){\n      if(!item){\n        Modal.info({\n          title:\"提示\",\n          content:\"请选择一个用户\"\n        })\n        return;\n      }\n      this.setState({\n        type,\n        isVisible:true,\n        title:'员工详情',\n        userInfo:item\n      })\n    }else{\n      if(!item){\n        Modal.info({\n          title:\"提示\",\n          content:\"请选择一个用户\"\n        })\n        return;\n      }\n      let _this=this;\n      Modal.confirm({\n        title:'确认删除',\n        onOk(){\n          axios.ajax({\n            url:'user/delete',\n            data:{\n              params:{\n                id:item.id\n              }\n            }\n          }).then((res)=>{\n            if(res.code == 0){\n              _this.setState({\n                isVisible:false\n              })\n              _this.requestList();\n            }\n          })\n        }\n      })\n    }\n  }\n  //创建员工提交\n  handleSubmit = () => {\n    let type = this.state.type;\n    let data = this.userForm.props.form.getFieldsValue();\n    axios.ajax({\n      url:type == \"create\"?'/user/add':'user/edit',\n      data:{\n        params:data\n      }\n    }).then(res=>{\n      if(res.code==0){\n        this.setState({\n          isVisible:false\n        })\n        this.requestList();\n      }\n    })\n  }\n  render() {\n    const columns = [\n      {\n        title: 'id',\n        dataIndex: 'id'\n      }, {\n        title: '用户名',\n        dataIndex: 'username'\n      }, {\n        title: '性别',\n        dataIndex: 'state',\n        render(sex) {\n          return sex == 1 ? '男' : '女'\n        }\n      }, {\n        title: '状态',\n        dataIndex: 'state',\n        render(state) {\n          return {\n            '1': '咸鱼一条',\n            '2': '风华浪子',\n            '3': '北大才子一枚',\n            '4': '百度FE',\n            '5': '创业者',\n          }[state] //取索引对应的值\n        }\n      }, {\n        title: '爱好',\n        dataIndex: 'interest',\n        render(interest) {\n          return {\n            '1': '游泳',\n            '2': '打篮球',\n            '3': '踢足球',\n            '4': '跑步',\n            '5': '睡觉',\n            '6': '唱歌',\n            '7': '跳舞',\n            '8': '吃饭',\n          }[interest]\n        }\n      }, {\n        title: '生日',\n        dataIndex: 'birthday'\n      }, {\n        title: '联系地址',\n        dataIndex: 'address'\n      }, {\n        title: '早起时间',\n        dataIndex: 'time'\n      }\n    ]\n    let footer = {};\n    if(this.state.type == 'detail'){\n      footer = {\n        footer:null\n      }\n    }\n    return (\n      <div>\n        <Card>\n          <BaseForm formList={this.formList} filterSubmit={this.handleFilter} />\n        </Card>\n        <Card style={{marginTop:10}} className=\"operate-wrap\">\n          <Button type=\"primary\" icon=\"plus\" onClick={()=>this.handleOperate('create')}>创建员工</Button>\n          <Button type=\"primary\" icon=\"edit\" onClick={()=>this.handleOperate('edit')}>编辑员工</Button>\n          <Button type=\"primary\" onClick={()=>this.handleOperate('detail')}>员工详情</Button>\n          <Button type=\"primary\" icon=\"delete\" onClick={()=>this.handleOperate('delete')}>删除员工</Button>\n        </Card>\n        <div className=\"content-wrap\">\n          <ETable\n            updateSelectedItem={Utils.updateSelectedItem.bind(this)}\n            columns = {columns}\n            dataSource={this.state.list}\n            selectedRowKeys={this.state.selectedRowKeys}\n            selectedItem={this.state.selectedItem}\n            pagination={false}\n          />\n        </div>\n        <Modal\n          title={this.state.title}\n          visible={this.state.isVisible}\n          onOk={this.handleSubmit}\n          onCancel={()=>{\n            this.userForm.props.form.resetFields();\n            this.setState({\n              isVisible:false\n            })\n          }}\n          width={600}\n          {...footer}\n        >\n          <UserForm type={this.state.type} userInfo={this.state.userInfo} wrappedComponentRef={(inst)=>{this.userForm = inst;}}/>\n          {/* wrappedComponentRef类似vue中的ref，把对象存下来 */}\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass UserForm extends Component{\n\n  getState = state => {\n    return {\n      '1':'咸鱼一条',\n      '2':'风华浪子',\n      '3':'北大才子一枚',\n      '4':'百度FE',\n      '5':'创业者',\n    }[state]\n  }\n\n  render(){\n    let type = this.props.type;\n    let userInfo = this.props.userInfo || {};\n    const {getFieldDecorator} = this.props.form;\n    const formItemLayout = {\n      labelCol:{span:5},\n      wrapperCol:{span:15}\n    }\n    return (\n      <Form layout=\"horizontal\">\n        <FormItem label=\"用户名\" {...formItemLayout}>\n          {\n            type == 'detail' ? userInfo.username :\n              getFieldDecorator('user_name', {\n                initialValue: userInfo.username\n              })(\n                <Input type=\"text\" placeholder=\"请输入用户名\" />\n              )\n          }\n        </FormItem>\n        <FormItem label=\"性别\" {...formItemLayout}>\n          {\n            type == 'detail' ? userInfo.sex==1?'男':'女' :\n              getFieldDecorator('sex', {\n                initialValue: userInfo.sex\n              })(\n                <RadioGroup>\n                  <Radio value={1}>男</Radio>\n                  <Radio value={2}>女</Radio>\n                </RadioGroup>\n              )\n          }\n        </FormItem>\n        <FormItem label=\"状态\" {...formItemLayout}>\n          {\n            type == 'detail' ? this.getState(userInfo.state):\n              getFieldDecorator('state', {\n                initialValue: userInfo.state\n              })(\n                <Select>\n                  <Option value={1}>咸鱼一条</Option>\n                  <Option value={2}>风华浪子</Option>\n                  <Option value={3}>北大才子</Option>\n                  <Option value={4}>百度FE</Option>\n                  <Option value={5}>创业者</Option>\n                </Select>\n              )\n          }\n        </FormItem>\n        <FormItem label=\"生日\" {...formItemLayout}>\n          {\n            type == 'detail' ? userInfo.birthday:\n              getFieldDecorator('birthday', {\n                initialValue: moment(userInfo.birthday)\n              })(\n                <DatePicker />\n              )\n          }\n        </FormItem>\n        <FormItem label=\"联系地址\" {...formItemLayout}>\n          {\n            type == 'detail' ? userInfo.address:\n              getFieldDecorator('address', {\n                initialValue: userInfo.address\n              })(\n                <TextArea rows={3} placeholder=\"请输入联系方式\" />\n              )\n          }\n        </FormItem>\n      </Form>\n    )\n  }\n}\nUserForm = Form.create({})(UserForm)","D:\\myweb9\\gxdc\\src\\pages\\bikeMap\\index.jsx",["224","225"],"import React, { Component } from 'react'\nimport {Card,Form} from 'antd'\nimport BaseForm from './../../components/BaseForm'\nimport axios from './../../axios'\n\nexport default class BikeMap extends Component {\n  state = {};\n  map = ''\n  formList = [\n    {\n      type:'城市'\n    },{\n      type:\"时间查询\"\n    },{\n      type:'SELECT',\n      label:'订单状态',\n      field:'order_status',\n      placeholder:'全部',\n      initialValue:'0',\n      list:[{id:'0',name:'全部'},{id:'1',name:'进行中'},{id:'2',name:'结束行程'}]\n    }\n  ]\n  requestList = () => {\n    axios.ajax({\n      url:'/map/bike_list',\n      data:{\n        params:this.params\n      }\n    }).then(res=>{\n      if(res.code == 0){\n        this.setState({\n          total_count:res.result.total_count //这里存state里是因为render渲染需要这个参数\n        })\n        this.renderMap(res)\n      }\n    })\n  }\n\n  componentWillMount(){\n    this.requestList();\n  }\n\n  //查询表单--接收查询功能返回的参数\n  handleFilterSubmit = (filterParams) => {\n    this.params = filterParams;//不用存到state里边，这样不用重新调用render方法，凡是调用了setState了就会重新调用render方法\n    this.requestList();\n  }\n\n  //渲染地图数据\n  renderMap = res => {\n    let list = res.result.route_list;\n    this.map = new window.BMap.Map('container');//初始化一个map地图 container是id名\n    //获得起点\n    let gps1 = list[0].split(',');\n    let startPoint = new window.BMap.Point(gps1[0],gps1[1]);\n    // window.BMap.Icon(图片资源地址,显示图片大小(裁剪),{imageSize:缩放图片大小,anchor:偏移量})\n    let startPointIcon = new window.BMap.Icon('/assets/start_point.png',new window.BMap.Size(36,42),{\n      imageSize:new window.BMap.Size(36,42),\n      anchor:new window.BMap.Size(18,42),\n    })\n    let bikeMarkerStart = new window.BMap.Marker(startPoint,{icon:startPointIcon})\n    this.map.addOverlay(bikeMarkerStart);//初始化了一个组件之后，需要把组件用addOverlay添加到地图上去\n    //获得终点\n    let gps2 = list[list.length-1].split(',');\n    let endPoint = new window.BMap.Point(gps2[0],gps2[1]);\n    this.map.centerAndZoom(endPoint,11);//把地图的endPoint点聚集在地图的正中间\n    let endPointIcon = new window.BMap.Icon('/assets/end_point.png',new window.BMap.Size(36,42),{\n      imageSize:new window.BMap.Size(36,42),\n      anchor:new window.BMap.Size(18,42),\n    })\n    let bikeMarkerEnd = new window.BMap.Marker(endPoint,{icon:endPointIcon})\n    this.map.addOverlay(bikeMarkerEnd);\n\n    //绘制车辆行驶路线\n    let routeList = [];\n    list.forEach((item)=>{\n      let p = item.split(',');\n      routeList.push(new window.BMap.Point(p[0],p[1]))\n    })\n    let polyLine = new window.BMap.Polyline(routeList,{\n      strokeColor:'#ef4136',\n      strokeWeight:2,\n      strokeOpacity:1\n    });\n    this.map.addOverlay(polyLine);//添加到地图上\n\n    //绘制服务区\n    let servicePointList = [];\n    let serviceList = res.result.service_list;\n    serviceList.forEach((item)=>{\n      servicePointList.push(new window.BMap.Point(item.lon,item.lat))\n    })\n    let polyServiceLine = new window.BMap.Polyline(servicePointList,{\n      strokeColor:'#ef4136',\n      strokeWeight:3,\n      strokeOpacity:1\n    });\n    this.map.addOverlay(polyServiceLine);//添加到地图上\n\n    //添加地图中的自行车图标\n    let bikeList = res.result.bike_list;\n    let bikeIcon = new window.BMap.Icon('assets/bike.jpg',new window.BMap.Size(36,42),{\n      imageSize:new window.BMap.Size(36,42),\n      anchor:new window.BMap.Size(18,42)\n    })\n    bikeList.forEach((item)=>{\n      let p = item.split(',');\n      let point = new window.BMap.Point(p[0],p[1]);\n      let bikeMarker = new window.BMap.Marker(point,{icon:bikeIcon});//{icon:bikeIcon}不写的话是默认的小红气球\n      this.map.addOverlay(bikeMarker);\n    })\n  } \n  render() {\n    return (\n      <div>\n        <Card>\n          <BaseForm formList={this.formList} filterSubmit={this.handleFilterSubmit} />\n        </Card>\n        <Card style={{marignTop:10}}>\n          <div>共{this.state.total_count}辆车</div>\n          <div id=\"container\" style={{height:500}}></div>\n        </Card>\n      </div>\n    )\n  }\n}\n","D:\\myweb9\\gxdc\\src\\pages\\echarts\\pie\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\echarts\\bar\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\echarts\\line\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\permission\\index.jsx",["226","227","228"],"import React, { Component } from 'react'\nimport {Card,Button,Modal,Form,Select,Input,Tree,Transfer} from 'antd'\nimport ETable from './../../components/ETable'\nimport Utils from './../../utils/utils'\nimport axios from './../../axios'\nimport menuConfig from './../../config/menuConfig'\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nconst TreeNode = Tree.TreeNode;\n\nexport default class Permission extends Component {\n  state = {};\n  componentWillMount(){\n    axios.requestList(this,'/role/list',{})\n  }\n  //打开创建角色弹窗\n  handleRole = () => {\n    this.setState({\n      isRoleVisible:true\n    })\n  }\n  //创建角色提交\n  handleRoleSubmit = () => {\n    let data = this.roleForm.props.form.getFieldsValue();\n    axios.ajax({\n      url:'role/create',\n      data:{\n        params:data\n      }\n    }).then((res)=>{\n      if(res.code==0){\n        this.setState({\n          isRoleVisible:false\n        })\n        this.roleForm.props.form.resetFields();\n        axios.requestList(this,'/role/list',{})\n      }\n    })\n  }\n  //权限设置\n  handlePermission = () =>{\n    let item = this.state.selectedItem;\n    if(!item){\n      Modal.info({\n        title:'提示',\n        content:'请选择一个角色'\n      })\n      return;\n    }\n    this.setState({\n      isPermVisible:true,\n      detailInfo:item,\n      menuInfo:item.menus\n    })\n  }\n  //权限设置提交\n  handlePermEditSubmit = () => {\n    let data = this.permForm.props.form.getFieldsValue();\n    data.role_id = this.state.selectedItem.id;\n    data.menus = this.state.menuInfo;\n    axios.ajax({\n      url:'/permission/edit',\n      data:{\n        params:{\n          ...data\n        }\n      }\n    }).then((res)=>{\n      if(res){\n        this.setState({\n          isPermVisible:false\n        })\n        axios.requestList(this,'/role/list',{})\n      }\n    })\n  } \n\n  //用户授权\n  handleUserAuth = () => {\n    let item = this.state.selectedItem;\n    if(!item){\n      Modal.info({\n        title:'提示',\n        content:'请选择一个角色'\n      })\n      return;\n    }\n    this.setState({\n      isUserVisible:true,\n      detailInfo:item\n    })\n    this.getRoleUserList(item.id);\n  }\n  //\n  getRoleUserList = (id) => {\n    axios.ajax({\n      url:'/role/user_list',\n      data:{\n        params:{\n          id\n        }\n      }\n    }).then(res=>{\n      if(res){\n        this.getAuthUserList(res.result)\n      }\n    })\n  }\n  //筛选目标用户\n  getAuthUserList = (dataSource) => {\n    const mockData = [];\n    const targetKeys = [];\n    if(dataSource && dataSource.length>0){\n      for(let i=0;i<dataSource.length;i++){\n        const data = {\n          key:dataSource[i].user_id,\n          title:dataSource[i].user_name,\n          status:dataSource[i].status\n        }\n        if(data.status==1){\n          targetKeys.push(data.key);\n        }\n        mockData.push(data)\n      }\n      this.setState({\n        mockData,targetKeys\n      })\n    }\n  }\n  //用户授权提交\n  handleUserSubmit = () => {\n    let data = {};\n    data.user_ids = this.state.targetKeys;\n    data.role_id = this.state.selectedItem.id;\n    axios.ajax({\n      url:'/role/user_role_edit',\n      data:{\n        params:{\n          ...data\n        }\n      }\n    }).then(res=>{\n      if(res){\n        this.setState({\n          isUserVisible:false\n        })\n        axios.requestList(this,'/role/list',{})\n      }\n    })\n  }\n  render() {\n    const columns = [\n      {\n        title:'角色ID',\n        dataIndex:'id'\n      },{\n        title:'角色名称',\n        dataIndex:'role_name'\n      },{\n        title:'创建时间',\n        dataIndex:'create_time',\n        render:Utils.formateDate\n      },{\n        title:'使用状态',\n        dataIndex:'status',\n        render(status){\n          return status == 1 ? '启用' : '停用'\n        }\n      },{\n        title:'授权时间',\n        dataIndex:'authorize_time',\n        render:Utils.formateDate\n      },{\n        title:'授权人',\n        dataIndex:'authorize_user_name'\n      }\n    ]\n    return (\n      <div>\n        <Card>\n          <Button type=\"primary\" onClick={this.handleRole} style={{marginRight:10}}>创建角色</Button>\n          <Button type=\"primary\" onClick={this.handlePermission} style={{marginRight:10}}>设置权限</Button>\n          <Button type=\"primary\" onClick={this.handleUserAuth}>用户授权</Button>\n        </Card>\n        <div className=\"content-wrap\">\n          <ETable\n            updateSelectedItem={Utils.updateSelectedItem.bind(this)}\n            selectedRowKeys={this.state.selectedRowKeys}\n            dataSource = {this.state.list}\n            columns={columns}\n          />\n        </div>\n        <Modal\n          title=\"创建角色\"\n          visible={this.state.isRoleVisible}\n          onOk={this.handleRoleSubmit}\n          onCancel={()=>{\n            this.roleForm.props.form.resetFields();//表单重置\n            this.setState({\n              isRoleVisible:false\n            })\n          }}\n        >\n          <RoleForm wrappedComponentRef={(inst)=>this.roleForm=inst}></RoleForm>\n        </Modal>\n        <Modal\n          title=\"设置权限\"\n          visible={this.state.isPermVisible}\n          width={600}\n          onOk={this.handlePermEditSubmit}\n          onCancel={()=>{\n            this.setState({\n              isPermVisible:false\n            })\n          }}\n        >\n          <PermEditForm \n            wrappedComponentRef={(inst)=>this.permForm=inst}\n            detailInfo={this.state.detailInfo}\n            menuInfo={this.state.menuInfo}\n            patchMenuInfo={(checkedKeys)=>{\n              this.setState({\n                menuInfo:checkedKeys\n              })\n            }}\n          />\n        </Modal>\n        <Modal\n          title=\"用户授权\"\n          visible={this.state.isUserVisible}\n          width={800}\n          onOk={this.handleUserSubmit}\n          onCancel={()=>{\n            this.userAuthForm.props.form.resetFields(); //表单重置\n            this.setState({\n              isUserVisible:false\n            })\n          }}\n        >\n          <RoleAuthForm \n            wrappedComponentRef={(inst)=>this.userAuthForm=inst}\n            detailInfo={this.state.detailInfo}\n            targetKeys={this.state.targetKeys}\n            mockData={this.state.mockData}\n            patchUserInfo={targetKeys=>{\n              this.setState({\n                  targetKeys\n              })\n            }}\n          />\n        </Modal>\n      </div>\n    )\n  }\n}\n\nclass RoleForm extends Component{\n  render(){\n    const {getFieldDecorator} = this.props.form;\n    const formItemLayout = {\n      labelCol:{span:5},\n      wrapperCol:{span:15}\n    }\n    return(\n      <Form layout=\"horizontal\">\n        <FormItem label=\"角色名称\" {...formItemLayout}>\n          {\n            getFieldDecorator('role_name')(\n              <Input type=\"text\" placeholder=\"请输入角色名称\"/>\n            )\n          }\n        </FormItem>\n        <FormItem label=\"状态\" {...formItemLayout}>\n          {\n            getFieldDecorator('state')(\n              <Select>\n                <Option value={0}>关闭</Option>\n                <Option value={1}>开启</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n      </Form>\n    )\n  }\n}\nRoleForm = Form.create({})(RoleForm)\n\nclass PermEditForm extends Component{\n\n  onCheck = (checkedKeys) => {\n    this.props.patchMenuInfo(checkedKeys)\n  }\n  renderTreeNodes = data => {\n    return data.map(item=>{\n      if(item.children){\n        return <TreeNode title={item.title} key={item.key}>\n          {this.renderTreeNodes(item.children)}\n        </TreeNode>\n      }else{\n        return <TreeNode title={item.title} key={item.key} />\n      }\n    })\n  }\n\n  render(){\n    const {getFieldDecorator} = this.props.form; //实现双向绑定\n    const formItemLayout = {\n      labelCol:{span:5},\n      wrapperCol:{span:15}\n    }\n    const detail_info = this.props.detailInfo;\n    const menuInfo = this.props.menuInfo;\n    return (\n      <Form layout=\"horizontal\">\n        <FormItem label=\"角色名称\" {...formItemLayout}>\n          <Input disabled placeholder={detail_info.role_name} />\n        </FormItem>\n        <FormItem label=\"状态\" {...formItemLayout}>\n          {\n            getFieldDecorator('status',{\n              initialValue:'1'\n            })(\n              <Select>\n                <Option value=\"1\">启用</Option>\n                <Option value=\"0\">停用</Option>\n              </Select>\n            )\n          }\n        </FormItem>\n        <Tree\n          checkable //复选框\n          defaultExpandAll //默认展开\n          onCheck={(checkedKeys)=>{\n            this.onCheck(checkedKeys)\n          }} //点击复选框触发\n          checkedKeys={menuInfo} //默认选中的keys\n        >\n          <TreeNode title=\"平台权限\" key=\"platform_all\">\n            {this.renderTreeNodes(menuConfig)}\n          </TreeNode>\n        </Tree>\n      </Form>\n    )\n  }\n}\nPermEditForm = Form.create({})(PermEditForm)\n\nclass RoleAuthForm extends Component {\n  filterOption = (inputValue,option) => option.title.indexOf(inputValue)\n\n  handleChange = targetKeys => {\n    this.props.patchUserInfo(targetKeys)\n  }\n\n  render(){\n    const formItemLayout = {\n      labelCol:{span:5},\n      wrapperCol:{span:15}\n    }\n    const detail_info = this.props.detailInfo;\n    return (\n      <Form layout=\"horizontal\">\n        <FormItem label=\"角色名称\" {...formItemLayout}>\n          <Input disabled placeholder={detail_info.role_name} />\n        </FormItem>\n        <FormItem label=\"选择用户\" {...formItemLayout}>\n          <Transfer\n            listStyle={{width:200,height:400}} //自定义样式\n            dataSource={this.props.mockData} //数据源\n            titles={['待选用户','已选用户']} //标题集合，顺序从左到右\n            showSearch //是否显示搜索框\n            locale={{searchPlaceholder:'输入用户名'}} //各种语言\n            filterOption={this.filterOption} //接收 inputValue option 两个参数，当 option 符合筛选条件时，应返回 true，反之则返回 false\n            targetKeys={this.props.targetKeys} //显示在右侧框数据的 key 集合\n            onChange={this.handleChange} //选项在两栏之间转移时的回调函数\n            render={item=>item.title} //每行数据渲染函数，该函数的入参为 dataSource 中的项，返回值为 ReactElement。或者返回一个普通对象，其中 label 字段为 ReactElement，value 字段为 title\n          />\n        </FormItem>\n      </Form>\n    )\n  }\n}\nRoleAuthForm = Form.create({})(RoleAuthForm)","D:\\myweb9\\gxdc\\src\\pages\\echarts\\echartTheme.js",["229"],"D:\\myweb9\\gxdc\\src\\pages\\rich\\index.jsx",[],"D:\\myweb9\\gxdc\\src\\pages\\echarts\\themeLight.js",["230"],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"231","replacedBy":"235"},{"ruleId":"233","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":5,"column":1,"nodeType":"239","endLine":51,"endColumn":2},{"ruleId":"240","severity":1,"message":"241","line":30,"column":22,"nodeType":"242","messageId":"243","endLine":30,"endColumn":24},{"ruleId":"231","replacedBy":"244"},{"ruleId":"233","replacedBy":"245"},{"ruleId":"231","replacedBy":"246"},{"ruleId":"233","replacedBy":"247"},{"ruleId":"231","replacedBy":"248"},{"ruleId":"233","replacedBy":"249"},{"ruleId":"240","severity":1,"message":"241","line":45,"column":36,"nodeType":"242","messageId":"243","endLine":45,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":60,"column":49,"nodeType":"242","messageId":"243","endLine":60,"endColumn":51},{"ruleId":"240","severity":1,"message":"241","line":89,"column":22,"nodeType":"242","messageId":"243","endLine":89,"endColumn":24},{"ruleId":"240","severity":1,"message":"241","line":26,"column":49,"nodeType":"242","messageId":"243","endLine":26,"endColumn":51},{"ruleId":"250","severity":1,"message":"251","line":58,"column":19,"nodeType":"252","messageId":"253","endLine":58,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":79,"column":22,"nodeType":"252","messageId":"253","endLine":79,"endColumn":24},{"ruleId":"250","severity":1,"message":"251","line":85,"column":26,"nodeType":"252","messageId":"253","endLine":85,"endColumn":28},{"ruleId":"250","severity":1,"message":"251","line":67,"column":18,"nodeType":"252","messageId":"253","endLine":67,"endColumn":20},{"ruleId":"250","severity":1,"message":"251","line":89,"column":20,"nodeType":"252","messageId":"253","endLine":89,"endColumn":22},{"ruleId":"250","severity":1,"message":"251","line":25,"column":23,"nodeType":"252","messageId":"253","endLine":25,"endColumn":25},{"ruleId":"250","severity":1,"message":"251","line":46,"column":30,"nodeType":"252","messageId":"253","endLine":46,"endColumn":32},{"ruleId":"250","severity":1,"message":"251","line":61,"column":30,"nodeType":"252","messageId":"253","endLine":61,"endColumn":32},{"ruleId":"250","severity":1,"message":"251","line":72,"column":30,"nodeType":"252","messageId":"253","endLine":72,"endColumn":32},{"ruleId":"250","severity":1,"message":"251","line":85,"column":30,"nodeType":"252","messageId":"253","endLine":85,"endColumn":32},{"ruleId":"250","severity":1,"message":"251","line":99,"column":30,"nodeType":"252","messageId":"253","endLine":99,"endColumn":32},{"ruleId":"254","severity":1,"message":"255","line":2,"column":8,"nodeType":"256","messageId":"257","endLine":2,"endColumn":13},{"ruleId":"250","severity":1,"message":"251","line":8,"column":20,"nodeType":"252","messageId":"253","endLine":8,"endColumn":22},{"ruleId":"250","severity":1,"message":"251","line":14,"column":15,"nodeType":"252","messageId":"253","endLine":14,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":44,"column":28,"nodeType":"252","messageId":"253","endLine":44,"endColumn":30},{"ruleId":"231","replacedBy":"258"},{"ruleId":"233","replacedBy":"259"},{"ruleId":"250","severity":1,"message":"251","line":60,"column":19,"nodeType":"252","messageId":"253","endLine":60,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":74,"column":19,"nodeType":"252","messageId":"253","endLine":74,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":108,"column":25,"nodeType":"252","messageId":"253","endLine":108,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":124,"column":16,"nodeType":"252","messageId":"253","endLine":124,"endColumn":18},{"ruleId":"250","severity":1,"message":"251","line":129,"column":18,"nodeType":"252","messageId":"253","endLine":129,"endColumn":20},{"ruleId":"250","severity":1,"message":"251","line":149,"column":22,"nodeType":"252","messageId":"253","endLine":149,"endColumn":24},{"ruleId":"250","severity":1,"message":"251","line":190,"column":24,"nodeType":"252","messageId":"253","endLine":190,"endColumn":26},{"ruleId":"250","severity":1,"message":"251","line":261,"column":18,"nodeType":"252","messageId":"253","endLine":261,"endColumn":20},{"ruleId":"250","severity":1,"message":"251","line":271,"column":18,"nodeType":"252","messageId":"253","endLine":271,"endColumn":20},{"ruleId":"250","severity":1,"message":"251","line":271,"column":44,"nodeType":"252","messageId":"253","endLine":271,"endColumn":46},{"ruleId":"250","severity":1,"message":"251","line":284,"column":18,"nodeType":"252","messageId":"253","endLine":284,"endColumn":20},{"ruleId":"250","severity":1,"message":"251","line":300,"column":18,"nodeType":"252","messageId":"253","endLine":300,"endColumn":20},{"ruleId":"250","severity":1,"message":"251","line":310,"column":18,"nodeType":"252","messageId":"253","endLine":310,"endColumn":20},{"ruleId":"254","severity":1,"message":"260","line":2,"column":14,"nodeType":"256","messageId":"257","endLine":2,"endColumn":18},{"ruleId":"250","severity":1,"message":"251","line":30,"column":19,"nodeType":"252","messageId":"253","endLine":30,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":31,"column":18,"nodeType":"252","messageId":"253","endLine":31,"endColumn":20},{"ruleId":"250","severity":1,"message":"251","line":120,"column":23,"nodeType":"252","messageId":"253","endLine":120,"endColumn":25},{"ruleId":"250","severity":1,"message":"251","line":167,"column":25,"nodeType":"252","messageId":"253","endLine":167,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":1,"column":1,"nodeType":"239","endLine":211,"endColumn":2},{"ruleId":"237","severity":1,"message":"238","line":18,"column":1,"nodeType":"239","endLine":199,"endColumn":2},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],["261"],["262"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["261"],["262"],["261"],["262"],["261"],["262"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Utils' is defined but never used.","Identifier","unusedVar",["261"],["262"],"'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]